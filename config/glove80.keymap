/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

// layers

#define DEFAULT 0
#define LOWER 1
#define MAGIC 2

/ {
    behaviors {
        // For the "layer" key, it'd nice to be able to use it as either a shift or a toggle.
        // Configure it as a tap dance, so the first tap (or hold) is a &mo and the second tap is a &to

        layer_td: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo LOWER>, <&to LOWER>;
        };

        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;    // <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        symblr {
            timeout-ms = <150>;
            key-positions = <42 41>;
            bindings = <&symblayercolor>;
        };

        symbll {
            timeout-ms = <150>;
            bindings = <&symblayercolor>;
            key-positions = <37 38>;
        };

        caps {
            bindings = <&caps_word>;
            key-positions = <52 57>;
        };
    };

    macros {
        cmdtab: cmdtab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_release>,
                <&kp LGUI>;
        };

        bt_0: bt_profile_macro_0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 0>;
        };

        bt_1: bt_profile_macro_1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 1>;
        };

        bt_2: bt_profile_macro_2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 2>;
        };

        bt_3: bt_profile_macro_3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 3>;
        };

        symblayercolor: symblayercolor {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mo 1 &rgb_ug RGB_TOG>,
                <&macro_tap>,
                <&rgb_ug RGB_COLOR_HSB(177,100,50)>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mo 1>,
                <&macro_tap>,
                <&rgb_ug RGB_TOG>;

            label = "SYMBLAYERCOLOR";
        };

        movelayercolor: movelayercolor {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mo 3 &rgb_ug RGB_TOG>,
                <&macro_tap>,
                <&rgb_ug RGB_COLOR_HSB(300,100,50)>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mo 3>,
                <&macro_tap>,
                <&rgb_ug RGB_TOG>;

            label = "MOVELAYERCOLOR";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp F1     &kp F2        &kp F3       &kp F4       &kp F5                                                                                                      &kp F6        &kp F7       &kp F8       &kp F9           &kp F10
&kp EQUAL  &kp N1        &kp N2       &kp N3       &kp N4         &kp N5                                                                               &kp N6  &kp N7        &kp N8       &kp N9       &kp N0           &kp MINUS
&kp TAB    &kp Q         &kp W        &kp E        &kp R          &kp T                                                                                &kp Y   &kp U         &kp I        &kp O        &kp P            &kp BSLH
&kp ESC    &bhm LCTRL A  &bhm LALT S  &bhm LGUI D  &bhm LSHIFT F  &kp G                                                                                &kp H   &bhm RSHFT J  &bhm RGUI K  &bhm RALT L  &bhm RCTRL SEMI  &kp SQT
&kp GRAVE  &kp Z         &kp X        &kp C        &kp V          &kp B   &kp LSHFT  &kp LGUI  &symblayercolor    &symblayercolor  &kp TAB  &kp RSHFT  &kp N   &kp M         &kp COMMA    &kp DOT      &kp FSLH         &kp PG_UP
&mo MAGIC  &kp HOME      &kp END      &kp LEFT     &kp RIGHT              &kp BSPC   &kp DEL   &movelayercolor    &kp ESC          &kp RET  &kp SPACE          &kp UP        &kp DOWN     &kp LBKT     &kp RBKT         &kp PG_DN
            >;
        };

        lower_layer {
            bindings = <
&kp C_BRI_DN  &kp C_BRI_UP       &kp C_PREV       &kp C_NEXT         &kp C_PP                                                                                                                   &kp C_MUTE   &kp C_VOL_DN       &kp C_VOL_UP  &none     &kp PAUSE_BREAK
&kp EQUAL     &kp N1             &kp N2           &kp N3             &kp N4                 &kp N5                                                                                   &kp PIPE   &kp N7       &kp N8             &kp N9        &kp N0    &kp MINUS
&kp TAB       &kp Q              &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp RIGHT_PARENTHESIS  &kp COLON                                                                                &kp AMPS   &kp MINUS    &kp DOUBLE_QUOTES  &kp BSLH      &kp P     &kp BSLH
&kp ESC       &kp DOUBLE_QUOTES  &kp LEFT_BRACE   &kp LEFT_BRACKET   &kp LEFT_PARENTHESIS   &kp DOT                                                                                  &kp PRCNT  &kp KP_PLUS  &kp SQT            &kp FSLH      &kp DLLR  &kp SQT
&kp GRAVE     &kp SQT            &kp X            &kp C              &kp V                  &kp B      &kp LSHFT  &kp LGUI  &symblayercolor    &symblayercolor  &kp RGUI  &kp RSHFT  &kp EXCL   &kp EQUAL    &kp COMMA          &kp DOT       &kp FSLH  &kp PG_UP
&mo MAGIC     &kp HOME           &kp END          &kp LEFT           &kp RIGHT                         &kp BSPC   &kp DEL   &movelayercolor    &kp ESC          &kp RET   &kp SPACE             &kp UP       &kp DOWN           &kp LBKT      &kp RBKT  &kp PG_DN
            >;
        };

        magic_layer {
            bindings = <
&bt BT_CLR   &none            &none            &none            &none                                                                                       &none  &none  &none  &none  &none
&none        &none            &none            &none            &none            &none                                                               &none  &none  &none  &none  &none  &none
&none        &rgb_ug RGB_SPI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_BRI  &rgb_ug RGB_TOG                                                     &none  &none  &none  &none  &none  &none
&bootloader  &rgb_ug RGB_SPD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_BRD  &rgb_ug RGB_EFF                                                     &none  &none  &none  &none  &none  &bootloader
&sys_reset   &none            &none            &none            &none            &none            &bt_2  &bt_3  &none           &none  &none  &none  &none  &none  &none  &none  &none  &sys_reset
&none        &none            &none            &none            &none                             &bt_0  &bt_1  &out OUT_USB    &none  &none  &none         &none  &none  &none  &none  &none
            >;
        };

        move_layer {
            bindings = <
&kp F1     &kp F2        &kp F3       &kp F4       &kp F5                                                                                                        &kp F6     &kp F7     &kp F8    &kp F9    &kp F10
&kp EQUAL  &kp N1        &kp N2       &kp N3       &kp N4         &kp N5                                                                               &kp N6    &kp N7     &kp N8     &kp N9    &kp N0    &kp MINUS
&kp TAB    &kp Q         &kp W        &kp E        &kp R          &kp T                                                                                &kp HOME  &kp PG_DN  &kp PG_UP  &kp END   &kp P     &kp BSLH
&kp ESC    &bhm LCTRL A  &bhm LALT S  &bhm LGUI D  &bhm LSHIFT F  &kp G                                                                                &kp H     &kp J      &kp K      &kp L     &kp SEMI  &kp SQT
&kp GRAVE  &kp Z         &kp X        &kp C        &kp V          &kp B   &kp LSHFT  &kp LGUI  &symblayercolor    &symblayercolor  &kp TAB  &kp RSHFT  &kp N     &kp M      &kp COMMA  &kp DOT   &kp FSLH  &kp PG_UP
&mo MAGIC  &kp HOME      &kp END      &kp LEFT     &kp RIGHT              &kp BSPC   &kp DEL   &movelayercolor    &kp ESC          &kp RET  &kp SPACE            &kp UP     &kp DOWN   &kp LBKT  &kp RBKT  &kp PG_DN
            >;
        };
    };
};
